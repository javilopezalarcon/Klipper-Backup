##############################
### OVERRIDE BUNDLE MACROS ###
##############################


### _USER_END_PRINT_BEFORE_HEATERS_OFF
# Location: macros_print_end_print.cfg
[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode:
  # Retract filament to prevent residue from remaining on the piece
  G1 E-3 F1800

### _USER_PAUSE_END
# Location: macros_print_basics.cfg
[gcode_macro _USER_PAUSE_END]
gcode:
  # Restore timeout defined in printer.cfg
  SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}

### M600
[gcode_macro M600]
description: Executes a color change by pausing the printer an unloading the filament.\nEjecuta un cambio de color pausando la impresora y descargando el filamento.
gcode:
  PUBLISH_ALERT PAYLOAD="M600"
  M117 "Cambiando filamento"
  RESPOND MSG="Cambiando filamento"
  PAUSE
  UNLOAD_FILAMENT
  BEEP R=3
  M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_m600_info}
  RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_m600_info}"

### PID_ALL
# Location: macros_config_pid.cfg
[gcode_macro PID_ALL]
description: Heater and Bed temperature calibration. Usage: PID_ALL [TE=temperature] [TB=temperature]\n Calibra la temperatura del extrusor y la cama. Uso: PID_ALL [TE=temperatura] [TB=temperature]
gcode:
  {% set e = printer.toolhead.extruder %}
  {% set S = params.FAN_IN_PERCENT|default(100)|float *2.55 %}
  {% set TE = params.TE|default(210)|int %}
  {% set TB = params.TB|default(60)|int %}
  M117 Homing...
  RESPOND MSG="Homing..."
  G28
  M117 Calibrando PID del extrusor...
  RESPOND MSG="Calibrando PID del extrusor..."
  M106 S{S}
  PID_CALIBRATE HEATER={e} TARGET={TE}
  M107
  M117 Calibrando PID de la cama...
  RESPOND MSG="Calibrando PID de la cama..."
  PID_CALIBRATE HEATER=heater_bed TARGET={TB}
  M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_done}
  RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_done}"
  SAVE_CONFIG

### LOAD_FILAMENT
# Location: macros_filament_basics.cfg
[gcode_macro LOAD_FILAMENT]
description: Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.\n Carga filamento nuevo. Nota: cuidado con el PETG, asegurate de inspeccionar la punta del filamento antes de cargarlo para evitar atascos.
#rename_existing: LOAD_FILAMENT_BASE
gcode:
  SAVE_GCODE_STATE NAME=load_state
  G91
  # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  {% if params.TEMP is defined or not printer.extruder.can_extrude %}
    M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_heating_extruder}
    RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_heating_extruder}"
    M104 S{params.TEMP|default(220, true)}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
  {% endif %}

  {% set load_speed = printer["gcode_macro GLOBAL_VARS"].filament_load_speed|float * 60 %}
  {% set load_low_speed = printer["gcode_macro GLOBAL_VARS"].filament_load_low_speed|float * 60 %}
  {% set load_length = printer["gcode_macro GLOBAL_VARS"].filament_load_length|float %}
  
  M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_load_filament}
  RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_load_filament}"

  # Load the filament into the hotend area.
  {% if printer.configfile.settings.extruder.max_extrude_only_distance < printer["gcode_macro GLOBAL_VARS"].filament_load_length %}
    M117 ERROR max_extrude_only_distance
    RESPOND MSG="Max Extrude Only Distance minor to Load Lengh... Setting Load Lengh to Max Extrude Only Distance... Please set your [extruder] section to correct max_extrude_only_distance"
  {% else %}
     G1 E{load_length * 3 / 4} F{load_speed} # Extrude fast
     G4 P1000                                # Wait 1 second
     G1 E{load_length / 4} F{load_low_speed} # Extrude slow
     M400                                    # Wait until extrusion is finished
     M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_load_ok}
     RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_load_ok}"
  {% endif %}

  RESTORE_GCODE_STATE NAME=load_state


### UNLOAD_FILAMENT
# Location: macros_filament_basics.cfg
[gcode_macro UNLOAD_FILAMENT]
description: Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.\N Descarga el filamento. Nota: cuidado con el PETG, asegurate de inspeccionar la punta del filamento antes de recargar para evitar atascos.
#rename_existing: UNLOAD_FILAMENT
gcode:
  SAVE_GCODE_STATE NAME=unload_state
  G91
  {% if params.TEMP is defined or not printer.extruder.can_extrude %}
    M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_heating_extruder}
    RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_heating_extruder}"

    # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
    M104 S{params.TEMP|default(220, true)}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
  {% endif %}

  {% set unload_speed = printer["gcode_macro GLOBAL_VARS"].filament_unload_speed|float * 60 %}
  {% set unload_low_speed = printer["gcode_macro GLOBAL_VARS"].filament_unload_low_speed|float * 60 %}
  {% set unload_length = printer["gcode_macro GLOBAL_VARS"].filament_unload_length|float %}
  
  M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_unload_filament}
  RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_unload_filament}"
  
  {% if printer.configfile.settings.extruder.max_extrude_only_distance < printer["gcode_macro GLOBAL_VARS"].filament_unload_length %}
    M117 ERROR max_extrude_only_distance
    RESPOND MSG="Max Extrude Only Distance minor to Unload Lengh... Setting Unload Lengh to Max Extrude Only Distance... Please set your [extruder] section to correct max_extrude_only_distance"
  {% else %}
    G1 E2 F{unload_low_speed}                    # Extrude a bit
    G1 E-{unload_length / 4} F{unload_low_speed} # Retract slow
    G1 E-{unload_length * 3 / 4} F{unload_speed} # Retract fast
    M400                                         # Wait until retraction is finished
    M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_unload_ok}
    RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_unload_ok ~ printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_unload_ok_tip}"
  {% endif %}
  
  RESTORE_GCODE_STATE NAME=unload_state

#######################
### PERSONAL MACROS ###
#######################

[gcode_macro PUBLISH_ALERT]
gcode:
  {% set data = params.PAYLOAD|default(None) %}
  {action_call_remote_method("publish_mqtt_topic",
                             topic="klipper/alert",
                             payload=data,
                             qos=0,
                             retain=False,
                             use_prefix=False)}

# [gcode_macro AGOTAMIENTO_FILAMENTO]
# variable_filament_length: 220
# gcode:
#     {% set filament_length = printer["gcode_macro AGOTAMIENTO_FILAMENTO"].filament_length %}
#     {% if filament_length > 0 and filament_length < 220 %}
#         M118 Consumiendo filamento restante...
#         SET_GCODE_VARIABLE MACRO=AGOTAMIENTO_FILAMENTO VARIABLE=filament_length VALUE={printer.extruder.position + 220}
#     {% else %}
#         M118 Filamento consumido, pausando impresiÃ³n...
#         M600
#     {% endif %}



### T_LOAD_FILAMENT
# Usage: T_LOAD_FILAMENT [TYPE=<material type>]
[gcode_macro T_LOAD_FILAMENT]
description: Loads the filament setting the right temperature by material type
gcode:
  {% set TYPE = params.TYPE|default("PLA")|string %}
  {% if TYPE == "PLA" %}
    LOAD_FILAMENT TEMP={printer["gcode_macro GLOBAL_VARS"].preheat_pla_temp}
  {% else %}
    M117 ERROR Unknown type: {TYPE}
    RESPOND TYPE=error MSG='Unknown type: {TYPE}'
  {% endif %}

### T_UNLOAD_FILAMENT
# Usage: T_UNLOAD_FILAMENT [TYPE=<material type>]
[gcode_macro T_UNLOAD_FILAMENT]
description: Unloads the filament setting the right temperature by material type
gcode:
  # Home all axis
  G28
  # Subimos el eje Z
  G91
  G1 Z+40 F1500
  G90
  {% set TYPE = params.TYPE|default("PLA")|string %}
  {% if TYPE == "PLA" %}
    UNLOAD_FILAMENT TEMP={printer["gcode_macro GLOBAL_VARS"].preheat_pla_temp}
    BEEP R=3
  {% else %}
    M117 ERROR Unknown type: {TYPE}
    RESPOND TYPE=error MSG='Unknown type: {TYPE}'
  {% endif %}


####################################################################

[gcode_macro LED_OFF]
gcode:  SET_PIN PIN=Luz_Impresora_3D VALUE=0

[gcode_macro LED_ON]
gcode:  SET_PIN PIN=Luz_Impresora_3D VALUE=1

[gcode_macro M600]
gcode:
  {% set X = params.X|default(50)|float %}
  {% set Y = params.Y|default(0)|float %}
  {% set Z = params.Z|default(10)|float %}
  SAVE_GCODE_STATE NAME=M600_state
  PAUSE
  BEEP
  G91
  G1 E-0.8 F2700
  G1 Z{Z}
  G90
  G1 X{X} Y{Y} F3000
  G91
  G1 E-50 F1000
  Restore_GCODE_STATE NAME=M600_state

[gcode_macro M300]
gcode:
    {% set P = params.P|default(100)|float %}
    SET_PIN PIN=beeper VALUE=1
    G4 P{P}
    SET_PIN PIN=beeper VALUE=0

[gcode_macro BEEP]
description: Emite un pitido.\n Uso BEEP [R=NUMERO DE PITIDOS]
gcode:
    {% if 'output_pin beeper' in printer.configfile.settings and printer["gcode_macro M300"] is defined %}
        {% set R = params.R|default(1)|int %}
        {% for i in range(R) %}
            M300 P200
            #M300
            G4 P100
        {% endfor %}
    {% endif %}