[gcode_macro UNLOAD_FILAMENT]
description: Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.\N Descarga el filamento. Nota: cuidado con el PETG, asegurate de inspeccionar la punta del filamento antes de recargar para evitar atascos.
gcode:
  SAVE_GCODE_STATE NAME=unload_state
  G91
  {% if params.TEMP is defined or not printer.extruder.can_extrude %}
    M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_heating_extruder}
    RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_heating_extruder}"

    # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
    M104 S{params.TEMP|default(220, true)}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
  {% endif %}

  {% set unload_speed = printer["gcode_macro GLOBAL_VARS"].filament_unload_speed|float * 60 %}
  {% set unload_length = printer["gcode_macro GLOBAL_VARS"].filament_unload_length|float %}
  
  M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_unload_filament}
  RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_unload_filament}"
  
  G1 E2 F200    # Extrude a bit
  G1 E-10 F200  # Retract a bit
  
  {% if printer.configfile.settings.extruder.max_extrude_only_distance < printer["gcode_macro GLOBAL_VARS"].filament_unload_length %}
    M117 ERROR max_extrude_only_distance
    RESPOND MSG="Max Extrude Only Distance minor to Unload Lengh... Setting Unload Lengh to Max Extrude Only Distance... Please set your [extruder] section to correct max_extrude_only_distance"
    G1 E-{printer.configfile.settings.extruder.max_extrude_only_distance} F{unload_speed} # Continue extraction slowly, allow the filament time to cool solid before it reaches the gears
  {% else %}
    G1 E-{unload_length} F{unload_speed} # Continue extraction slowly, allow the filament time to cool solid before it reaches the gears
  {% endif %}

  M117 {msg_unload_ok}
  RESPOND MSG="{msg_unload_ok ~ msg_unload_ok_tip}"

  RESTORE_GCODE_STATE NAME=unload_state


### LOAD_FILAMENT_T
# Usage: LOAD_FILAMENT_T [TYPE=<material type>]
[gcode_macro LOAD_FILAMENT_T]
description: Loads the filament setting the right temperature by material type
gcode:
  {% set TYPE = params.TYPE|default("PLA")|string %}
  {% if TYPE == "PLA" %}
    LOAD_FILAMENT TEMP={printer["gcode_macro GLOBAL_VARS"].preheat_pla_temp}
  {% else %}
    RESPOND TYPE=error MSG='Unknown type: {TYPE}'
  {% endif %}

### UNLOAD_FILAMENT_T
# Usage: UNLOAD_FILAMENT_T [TYPE=<material type>]
[gcode_macro UNLOAD_FILAMENT_T]
description: Unloads the filament setting the right temperature by material type
gcode:
  {% set TYPE = params.TYPE|default("PLA")|string %}
  {% if TYPE == "PLA" %}
    UNLOAD_FILAMENT TEMP={printer["gcode_macro GLOBAL_VARS"].preheat_pla_temp}
    BEEP R=3
  {% else %}
    RESPOND TYPE=error MSG='Unknown type: {TYPE}'
  {% endif %}

####################################################################

[gcode_macro LEDOFF]
gcode:  SET_PIN PIN=Luz_Impresora_3D VALUE=0

[gcode_macro LEDON]
gcode:  SET_PIN PIN=Luz_Impresora_3D VALUE=1

[gcode_shell_command Backup_Github_Klipper]
command: sh /home/javi/printer_data/config/3dwork-autocommit.sh
timeout: 30.
verbose: True

[gcode_macro Backup_Github_Klipper]
gcode:
    RUN_SHELL_COMMAND CMD=Backup_Github_Klipper

[gcode_macro M600]
gcode:
  {% set X = params.X|default(50)|float %}
  {% set Y = params.Y|default(0)|float %}
  {% set Z = params.Z|default(10)|float %}
  SAVE_GCODE_STATE NAME=M600_state
  PAUSE
  BEEP
  G91
  G1 E-0.8 F2700
  G1 Z{Z}
  G90
  G1 X{X} Y{Y} F3000
  G91
  G1 E-50 F1000
  Restore_GCODE_STATE NAME=M600_state

[gcode_macro M300]
gcode:
    {% set P = params.P|default(100)|float %}
    SET_PIN PIN=beeper VALUE=1
    G4 P{P}
    SET_PIN PIN=beeper VALUE=0

[gcode_macro BEEP]
description: Emite un pitido.\n Uso BEEP [R=NUMERO DE PITIDOS]
gcode:
    {% if 'output_pin beeper' in printer.configfile.settings and printer["gcode_macro M300"] is defined %}
        {% set R = params.R|default(0)|int %}
        {% for i in range(R) %}
            #M300 P200
            M300
        {% endfor %}
    {% endif %}